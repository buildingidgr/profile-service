{
  "info": {
    "name": "MechHub Profile Service API",
    "description": "API collection for MechHub Profile Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Health check endpoint to verify service status"
      },
      "response": []
    },
    {
      "name": "Profile",
      "item": [
        {
          "name": "Create Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-api-key",
                "value": "{{profile_create_key}}",
                "type": "text",
                "description": "Static API key for profile creation"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clerkId\": \"user_123\",\n  \"email\": \"user@example.com\",\n  \"emailVerified\": true,\n  \"phoneNumber\": \"+1234567890\",\n  \"phoneVerified\": false,\n  \"username\": \"johndoe\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"avatarUrl\": \"https://example.com/avatar.jpg\",\n  \"apiKey\": \"mk_0dbf1b1e4c8fabefa85429b5cabec282f2a1dd442dc8c0ab7a134bd77f0c6fb6\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me"]
            },
            "description": "Create a new user profile. Requires a special API key in the x-api-key header and a user-specific API key in the request body."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-api-key",
                    "value": "{{profile_create_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"clerkId\": \"user_123\",\n  \"email\": \"user@example.com\",\n  \"apiKey\": \"mk_0dbf1b1e4c8fabefa85429b5cabec282f2a1dd442dc8c0ab7a134bd77f0c6fb6\"\n}"
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439011\",\n  \"clerkId\": \"user_123\",\n  \"email\": \"user@example.com\",\n  \"emailVerified\": true,\n  \"apiKey\": \"mk_0dbf1b1e4c8fabefa85429b5cabec282f2a1dd442dc8c0ab7a134bd77f0c6fb6\",\n  \"createdAt\": \"2024-02-04T17:00:03.248Z\",\n  \"updatedAt\": \"2024-02-04T17:00:03.248Z\"\n}"
            },
            {
              "name": "Error - Invalid API Key",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-api-key",
                    "value": "invalid-key",
                    "type": "text"
                  }
                ]
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"Invalid API key\"\n}"
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me"]
            },
            "description": "Get the current user's profile"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"avatarUrl\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me"]
            },
            "description": "Update the current user's profile. Only specified fields will be updated."
          },
          "response": []
        },
        {
          "name": "Delete Profile",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me"]
            },
            "description": "Delete the current user's profile"
          },
          "response": []
        },
        {
          "name": "Generate API Key",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me/api-key",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me", "api-key"]
            },
            "description": "Generate a new API key for the user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Preferences",
      "item": [
        {
          "name": "Get Preferences",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/preferences",
              "host": ["{{baseUrl}}"],
              "path": ["api", "preferences"]
            },
            "description": "Get user preferences"
          },
          "response": []
        },
        {
          "name": "Update Preferences",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"dashboard\": {\n    \"timezone\": \"Europe/Athens\",\n    \"language\": \"el-GR\"\n  },\n  \"notifications\": {\n    \"email\": {\n      \"marketing\": false,\n      \"updates\": true,\n      \"security\": true,\n      \"newsletters\": false,\n      \"productAnnouncements\": true\n    }\n  },\n  \"display\": {\n    \"theme\": \"dark\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/preferences",
              "host": ["{{baseUrl}}"],
              "path": ["api", "preferences"]
            },
            "description": "Update user preferences. Only specified fields will be updated."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Professional",
      "item": [
        {
          "name": "Get Professional Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me/professional",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me", "professional"]
            },
            "description": "Get the professional information for the current user"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}",
                    "type": "text"
                  }
                ]
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"profession\": {\n    \"current\": \"Civil Engineer\",\n    \"allowedValues\": [\n      \"Civil Engineer\",\n      \"Architectural Engineer\",\n      \"Mechanical Engineer\",\n      \"Chemical Engineer\",\n      \"Electrical Engineer\",\n      \"Surveying and Rural Engineer\",\n      \"Naval Architect and Marine Engineer\",\n      \"Electronics Engineer\",\n      \"Mining and Metallurgical Engineer\",\n      \"Urban, Regional and Development Planning Engineer\",\n      \"Automation Engineer\",\n      \"Environmental Engineer\",\n      \"Production and Management Engineer\",\n      \"Acoustical Engineer\",\n      \"Materials Engineer\",\n      \"Product and Systems Design Engineer\"\n    ]\n  },\n  \"amtee\": \"12345\",\n  \"areaOfOperation\": {\n    \"primary\": \"Athens\",\n    \"address\": \"123 Main St\",\n    \"coordinates\": {\n      \"latitude\": 37.9838,\n      \"longitude\": 23.7275\n    }\n  },\n  \"radius\": 5\n}"
            }
          ]
        },
        {
          "name": "Update Professional Info",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"profession\": {\n    \"current\": \"Civil Engineer\"\n  },\n  \"amtee\": \"12345\",\n  \"areaOfOperation\": {\n    \"primary\": \"Athens\",\n    \"address\": \"123 Main St\",\n    \"coordinates\": {\n      \"latitude\": 37.9838,\n      \"longitude\": 23.7275\n    }\n  },\n  \"radius\": 5\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/profiles/me/professional",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profiles", "me", "professional"]
            },
            "description": "Update professional information. Only specified fields will be updated. The radius field is optional and must be a non-negative integer."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"profession\": {\n    \"current\": \"Civil Engineer\"\n  },\n  \"radius\": 5\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"profession\": {\n    \"current\": \"Civil Engineer\",\n    \"allowedValues\": [...]\n  },\n  \"amtee\": \"12345\",\n  \"areaOfOperation\": {\n    \"primary\": \"Athens\",\n    \"address\": \"123 Main St\",\n    \"coordinates\": {\n      \"latitude\": 37.9838,\n      \"longitude\": 23.7275\n    }\n  },\n  \"radius\": 5\n}"
            },
            {
              "name": "Error - Invalid Radius",
              "originalRequest": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"radius\": -1\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"Radius must be a non-negative integer\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Registration",
      "item": [
        {
          "name": "Get Registration Attempts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/registration/attempts?page=1&limit=10&phoneNumber=+1234567890",
              "host": ["{{baseUrl}}"],
              "path": ["api", "registration", "attempts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "phoneNumber",
                  "value": "+1234567890",
                  "description": "Optional phone number filter"
                }
              ]
            },
            "description": "Get registration attempts with pagination and optional phone number filter"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "your_jwt_token_here",
      "type": "string"
    },
    {
      "key": "profile_create_key",
      "value": "your-secure-profile-creation-key-here",
      "type": "string",
      "description": "Static API key for profile creation endpoint"
    }
  ]
} 